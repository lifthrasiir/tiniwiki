<?php exit; ?>
VGluaVdpa2lHb2Fs	5	YW5vbnltb3Vz	127.0.0.1	1081324005	
! TiniWiki의 목표

TiniWiki를 처음 만들기 시작할 때 [토끼군]은 몇 가지 목표를 세웠었다. 이 목표들이 과연 0.1이 나올 쯤 얼마나 실현되어 있을 지는 두고 봐야 겠지만, 할 수 있는 한 이 목표를 향해서 돌진(rush...)하고 싶다. 다음은 그 목표들이다.

!! 꼭 필요한 것만 있어야 한다.

[토끼군]이 wikiX 소스를 뒤져다 보면서 (개발자 노릇 한다는데 commit 빈도는 최악이다) 느끼는 점은, 역시 너무 명령이 많아서...
* 속도나 오버헤드가 꽤 많이 발생한다. -_-;
* 사용자들이 어려워한다.
라는 것이었다. 둘 다 큰 문제다. 이걸 해결하려면 가장 좋은 방법은 "꼭 필요한 명령만 만들고 나머지는 플러그인과 같은 외부 명령으로 구현"하는 것이다. TiniWiki는 그 법칙을 최대한 지키려 노력하고 있다.

''물론, wikiX도 쓸 만한 위키엔진이다. 처음에 접하기만 어려워서 그렇지 익숙해지면 이것만 쓰려고 하는 경우도 있다 :) 하지만 위와 같은 단점들이 의외로 큰 변수로 작용하는 것 같아 안타까울 때도 있다.''

!! 빨라야 한다.

위키위키라는 말은 "빨리빨리"라는 뜻을 갖고 있다. 그러니까 일단 빠르고 봐야 한다. :) 이름과 전혀 맞지 않는 프로그램이 좋은 건 아니잖는가. 물론 이건 농담이고... 아무튼 빠르면 빠를 수록 피드백이 빨랑 빨랑 이루어지고, 체감 속도와 같은 여러 요소에 영향을 주기 때문에 속도도 중요한 요소이다. 개인적으로는 웬만한 페이지를 0.2초 안에 파싱하면 충분히 빠르다고 생각한다...만, 최적화도 열심히 해야 할 것 같다. :S

물론, 빠르다는 말은 전반적으로 빠르다는 걸 뜻해야...하지만, 아무래도 파싱에 중점을 둬야 할 것 같다. (우선순위가 파싱 쪽으로... 쿨럭) 페이지 수정 등은 아무래도 우선순위가 파싱보다 낮기 때문에 (그 빈도가 상대적으로 적으니...) 파싱과 같은 더 우선순위가 높은 걸 위해서 속도를 좀 희생할 수는 있다. :) 지금까지 두 번 그랬다.

!! 사용하기 쉬워야 한다.

어떤 위키엔진이 사용하기 쉽다면 적어도 다음 기준을 만족하는 위키엔진일 것이다.

* __설치나 설정 작업이 쉽다.__ %%%
wikiX랑 PhpWiki는 좀 귀찮게 생기지 않았는가? :) (wikiX의 경우 .sh 파일 때문에 골머리를 앓아 왔다.)
* __기능이나 문법이 직관적이고 어포던스가 있어야 한다.__ %%%
이건 어느 위키엔진이나 마찬가지 상황에 있지 않나 싶다. TiniWiki도 "이게 뭐냐"고 항의/*왜 항의를 하는 지 알 수 없었지만-_-;;;*/를 받은 적이 한 번 있었다. -_-
* __문서화가 잘 되어 있어야 한다__ %%%
위키엔진에서 일반 사용자(end user)의 경우 WikiSeed 페이지들이 여기에 해당할 것이고, 개발자의 경우 기술 문서가 해당될 것이다. 일단 PhpWiki의 경우 WikiSeed가 죽어라 많은 데 비하여 wikiX는 거꾸로 죽어라 적다. -_-; TiniWiki는 20페이지 정도에서 마무리할 생각이고, 기술 문서를 비롯한 문서를 지속적으로 업데이트하고 점검해 나갈 것이다. %%%
위키위키는 아니지만 개인적으로 이 기준에 매우 맞는다고 생각하는 프로그램은 [[태터 툴즈|tattertools.com/]]이다. 별로 어렵지도 않은 데다가 어포던스가 꽤 강해서 설명서 없어도 대충 설치하고 쓰는 데 별 무리가 없는 프로그램이다. 하지만 이 놈의 단점은 XHTML은 커녕 HTML 4.0 Transitional에 맞는 페이지조차 출력하지 못 한다는 것이다. (그 쉬운 걸!) 다행히도 모질라 계열 브라우저 지원은 제대로 되어 있다.

!! 표준을 준수한다.

XHTML 1.1, CSS 2.0, DOM Level 1을 기준으로 한다. (wikiX는 HTML 4.0 Transitional이었제....) 그리고 최대한 웬만한 브라우저에서 거의 비슷하게 보이는 걸 목표로 하며, 가능하다면 텍스트 브라우저에서도 웬만큼은 보이게 만들고 싶다.

!! 위키로서 갖춰야 할 기본적인 기능은 당근 갖춘다.

그래서 대부분의 위키가 갖추고 있는 기능(This ''change'' is a minor edit 같은 것들...)은 최대한 넣으려 하고 있다. 그건 어렵지 않으니 넘어 가자. -_-;

!! I18N을 고려한다.
''I18N = Internationalization, 국제화. I와 N 사이에 18개의 글자가 들어 있어서 이런다.''

I18N을 고려하려면 몇 가지 사항을 생각해 봐야 한다.

__- UTF-8과 같은 다른 문자셋과 인코딩을 사용할 수 있어야 한다.__ %%%
현재 TiniWiki는 \\x00부터 \\x1F까지의 문자를 사용하지 않는 인코딩이라면 뭐든 사용 가능하다. :) UTF-8 같은 건 당근 되어야 한다.

__- 외국어 문서나 서포트가 가능해야 한다.__ %%%
솔직히 이게 좀 걱정되는 부분이긴 하다. 아무래도 외국어라면 영어가 가장 대표적일텐데, 개인적으로 영어에 엄청난 컴플렉스를 가지고 있기 때문에 환장할 노릇인데... 최대한 노력하면 될 것이라 생각한다. :)

__- 외국의 사정에 맞춰서 만들어져야 한다.__ %%%
이게 무슨 소린가 하면, 외국의 문화 같은 것으로 인해서 생길 수 있는 오해를 충분히 고려해야 한다는 것이다. 예를 들어서 \`가 많이 사용되는 언어의 경우 \`가 아니라 다른 문자로 WikiWord escape를 하는 게 훨씬 더 좋을 것이다. 일단 나는 영어와 한국어 기준으로 만들고 있기 때문에 문법에 사용되는 기호를 최대한 영어와 한국어에서 빈도가 적은 것으로 선택하려 했는데, 딴 건 다 좋았지만(\[..] 이게 가장 거시기하지만 일반적으로 많이 쓰인다 생각되어 채택하였다. 어차피 한국어는 \[..]보다 <..>가 더 많이 쓰이는 게 "정상"이다. -_-) \`가 좀 걸렸는데, 내가 아는 어떤 형이 \`는 영어에서도 빈도가 적다고 말을 해서 그냥 덥썩 저걸로 골랐다. -_-

!! 다른 위키에서 지원하는 내용 중 많이 쓰일 만한 건, 필요할 경우 지원한다.

플러그인 형태를 써서라도 필요한 건 지원할 생각이다. 예를 들어서 UseModWiki의 Calendar 플러그인 같은 것이 그런 거다. (그 외에 몇몇 확장 기능은 아마도 다른 위키엔진에서 지원하는 기능의 구현이 될 것이다.)

---
뭐... 또 생각 나면 계속 업데이트해야 겠다. :) ''2004년 4월 7일, 과격한 표현 많이 줄이고 조금 더 고침. -_-;;;;;''